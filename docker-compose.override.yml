version: '3.8'

services:
  catalogdb:
    container_name: catalogdb
    restart: always
    volumes:
      - /home/dalmaso/mongodb/data/catalog
    ports:
      - "27017:27017"

  basketdb:
    container_name: basketdb
    restart: always
    volumes:
      - /home/dalmaso/redisdb/data/basket
    ports:
      - "6379:6379"

  orderingdb:
    container_name: orderingdb
    environment:
      SA_PASSWORD: "yourStrong(!)Password"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"

  rabbitmq:
    container_name: msrabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

  catalog.api:
    container_name: catalogapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CatalogDatabaseSettings:ConnectionString=mongodb://catalogdb:27017"
    depends_on:
      - catalogdb
    volumes:
      - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
      - ${HOME}/.aspnet/https:/root/.aspnet/https/
    ports:
      - "8000:80"

  basket.api:
    container_name: basketapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:RedisDatabase=basketdb:6379"
      - "EventBus:HostName=msrabbitmq"
    depends_on:
      - basketdb
      - rabbitmq
    volumes:
      - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
      - ${HOME}/.aspnet/https:/root/.aspnet/https/
    ports:
      - "8001:80"

  ordering.api:
    container_name: orderingapi
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:OrderConnection=Server=orderingdb; Database=OrderDb; User Id=sa; Password=yourStrong(!)Password;"
      - "EventBus:HostName=msrabbitmq"
    depends_on:
      - orderingdb
      - rabbitmq
    volumes:
      - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
      - ${HOME}/.aspnet/https:/root/.aspnet/https/
    ports:
      - "8002:80"